version: 0.2
phases:
  install:
    commands:
      - echo Nothing to install...
  pre_build:
    commands:
      - echo "Update Image tag and env variables in kube-manifest..."
      - sed -i 's@CONTAINER_IMAGE@'"351138146362.dkr.ecr.ap-south-1.amazonaws.com/catalog_app:$IMAGE_TAG"'@' kube_manifest.yaml
      - sed -i 's@ENV_VAR@'"$NODE_ENV"'@' kube_manifest.yaml
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      # Build Docker Image
      - echo "Deploy started on `date`"
      - echo "Deploying the Docker image..."
      - echo 351138146362.dkr.ecr.ap-south-1.amazonaws.com/catalog_app:$IMAGE_TAG
  post_build:
    commands:
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - echo "Update Kube Config"
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - echo "Checking kubectl file"
      - cat kube_manifest.yaml
      - echo "Apply changes to kube manifests"
      - kubectl -n webapp rollout restart statefulset app
      #- kubectl -n webapp apply -f kube_manifest.yaml
      - echo "Completed applying changes to Kubernetes Objects"
